/**
 * This file was created by Quorum Born IT <http://www.qub-it.com/> and its 
 * copyright terms are bind to the legal agreement regulating the FenixEdu@ULisboa 
 * software development project between Quorum Born IT and Serviços Partilhados da
 * Universidade de Lisboa:
 *  - Copyright © 2015 Quorum Born IT (until any Go-Live phase)
 *  - Copyright © 2015 Universidade de Lisboa (after any Go-Live phase)
 *
 * Contributors: paulo.abrantes@qub-it.com
 * Contributors: nuno.pinheiro@qub-it.com
 *
 * 
 * This file is part of FenixEdu fenixedu-ulisboa-specifications.
 *
 * FenixEdu fenixedu-ulisboa-specifications is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * FenixEdu fenixedu-ulisboa-specifications is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with FenixEdu fenixedu-ulisboa-specifications.  If not, see <http://www.gnu.org/licenses/>.
 */

package org.fenixedu.ulisboa.specifications.domain;

external class .org.fenixedu.academic.domain.curricularPeriod.CurricularPeriod;
external class .org.fenixedu.academic.domain.student.StatuteType;

class UsernameSequenceGenerator {
	String prefix;
	protected Integer currentValue;
}

class idcards.CgdCard {
	String mifareCode;
	String cardNumber;
	LocalDate lastMifareModication;
	LocalDate issueDate;
	LocalDate validUntil;
	boolean temporary;
}

relation CgdCardPerson {
	idcards.CgdCard playsRole cgdCards {
		multiplicity *;
	}
	.org.fenixedu.academic.domain.Person playsRole person;
}

relation CgdCardRootDomainObject {
	idcards.CgdCard playsRole cgdCards {
		multiplicity *;
	}
	.org.fenixedu.bennu.core.domain.Bennu playsRole rootDomainObject;
}

class DisabilityType {
	String code (REQUIRED);
	LocalizedString description (REQUIRED);
	boolean other;
}

relation DisabilityTypeBennu {
	.org.fenixedu.bennu.core.domain.Bennu playsRole root {
        multiplicity 1..1;
    }
	DisabilityType playsRole disabilityTypes {
		multiplicity *;
	}
}

class UniversityDiscoveryMeansAnswer {
	String code (REQUIRED);
	LocalizedString description (REQUIRED);
	boolean other;
}

relation UniversityDiscoveryMeansAnswerBennu {
	.org.fenixedu.bennu.core.domain.Bennu playsRole root {
        multiplicity 1..1;
    }
	UniversityDiscoveryMeansAnswer playsRole universityDiscoveryMeansAnswers {
		multiplicity *;
	}
}

class UniversityChoiceMotivationAnswer {
	String code (REQUIRED);
	LocalizedString description (REQUIRED);
	boolean other;
}

relation UniversityChoiceMotivationAnswerBennu {
	.org.fenixedu.bennu.core.domain.Bennu playsRole root {
        multiplicity 1..1;
    }
	UniversityChoiceMotivationAnswer playsRole universityChoiceMotivationAnswers {
		multiplicity *;
	}
}

class SalarySpan {
	String code (REQUIRED);
	LocalizedString description (REQUIRED);
	boolean other;
}

relation SalarySpanBennu {
	.org.fenixedu.bennu.core.domain.Bennu playsRole root {
        multiplicity 1..1;
    }
	SalarySpan playsRole salarySpans {
		multiplicity *;
	}
}

class ResidenceType {
	String code (REQUIRED);
	LocalizedString description (REQUIRED);
	boolean other;
}

relation ResidenceTypeBennu {
	.org.fenixedu.bennu.core.domain.Bennu playsRole root {
        multiplicity 1..1;
    }
	ResidenceType playsRole residenceTypes {
		multiplicity *;
	}
}

class ProfessionTimeType {
	String code (REQUIRED);
	LocalizedString description (REQUIRED);
	boolean other;
}

relation ProfessionTimeTypeBennu {
	.org.fenixedu.bennu.core.domain.Bennu playsRole root {
        multiplicity 1..1;
    }
	ProfessionTimeType playsRole professionTimeTypes {
		multiplicity *;
	}
}

class PersonUlisboaSpecifications {
	LocalDate vaccinationValidity;
	boolean hasDisabilities;
	String otherDisabilityType;
	boolean needsDisabilitySupport;
	String otherUniversityDiscoveryMeans;
	String otherUniversityChoiceMotivation;
	String otherDislocatedResidenceType;
    String firstOptionDegreeDesignation;
}

relation PersonUlPerson {
	PersonUlisboaSpecifications playsRole personUlisboaSpecifications;
	.org.fenixedu.academic.domain.Person playsRole person;
}

relation PersonUlFirstOptionInstitution {
	PersonUlisboaSpecifications playsRole personUlisboaSpecifications {
		multiplicity *;
	}
    .org.fenixedu.academic.domain.organizationalStructure.Unit playsRole firstOptionInstitution;
}

relation PersonUlProfessionTimeType {
	PersonUlisboaSpecifications playsRole personUlisboaSpecifications {
		multiplicity *;
	}
	ProfessionTimeType playsRole professionTimeType;
}

relation PersonUlSalarySpan {
	PersonUlisboaSpecifications playsRole personUlisboaSpecifications {
		multiplicity *;
	}
	SalarySpan playsRole householdSalarySpan;
}

relation PersonUlResidenceType {
	PersonUlisboaSpecifications playsRole personUlisboaSpecifications {
		multiplicity *;
	}
	ResidenceType playsRole dislocatedResidenceType;
}

relation PersonUlDisabilityType {
	PersonUlisboaSpecifications playsRole personUlisboaSpecifications {
		multiplicity *;
	}
	DisabilityType playsRole disabilityType;
}


relation PersonUlUniversityDiscoveryMeansAnswer {
	PersonUlisboaSpecifications playsRole personUlisboaSpecifications {
		multiplicity *;
	}
	UniversityDiscoveryMeansAnswer playsRole universityDiscoveryMeansAnswers {
		multiplicity *;
	}
}

relation PersonUlUniversityChoiceMotivationAnswer {
	PersonUlisboaSpecifications playsRole personUlisboaSpecifications {
		multiplicity *;
	}
	UniversityChoiceMotivationAnswer playsRole universityChoiceMotivationAnswers {
		multiplicity *;
	}
}

relation PrecedentDegreeInformationDistrict{
	.org.fenixedu.academic.domain.student.PrecedentDegreeInformation playsRole precedentDegreeInformation;
	.org.fenixedu.academic.domain.District playsRole district;
}

relation PrecedentDegreeInformationDistrictSubdivision{
	.org.fenixedu.academic.domain.student.PrecedentDegreeInformation playsRole precedentDegreeInformation;
	.org.fenixedu.academic.domain.DistrictSubdivision playsRole districtSubdivision;
}

// ==================== ULisboa Specifications Root ====================

class ULisboaSpecificationsRoot {
}

relation ULisboaSpecificationsRootBennu {
	ULisboaSpecificationsRoot playsRole uLisboaSpecificationsRoot;
	.org.fenixedu.bennu.core.domain.Bennu playsRole rootDomainObject;
}

relation ULisboaSpecificationsRootRegistrationProtocol {
	ULisboaSpecificationsRoot playsRole uLisboaSpecificationsRoot;
	.org.fenixedu.academic.domain.student.RegistrationProtocol playsRole defaultRegistrationProtocol;
}

class ContingentToIngression {
	String contingent;
}

relation ContingentToIngressionIngressionType {
	.org.fenixedu.academic.domain.candidacy.IngressionType playsRole ingressionType;
	ContingentToIngression playsRole contingentToIngressions {
		multiplicity *;
	}
}

relation ULisboaSpecificationsRootContingentToIngressions {
	ULisboaSpecificationsRoot playsRole uLisboaSpecificationsRoot;
	ContingentToIngression playsRole contingentToIngressions {
		multiplicity *;
	}
}

relation ULisboaSpecificationsRootUsernameSequenceGenerator {
	UsernameSequenceGenerator playsRole usernameSequenceGenerator;
	ULisboaSpecificationsRoot playsRole uLisboaSpecificationsRoot;
}

// ==================== DGES Student Import ====================

class student.access.importation.DgesStudentImportationProcess extends .org.fenixedu.academic.domain.QueueJobWithFile {
	EntryPhase entryPhase;
}

class student.access.importation.DgesStudentImportationFile extends .org.fenixedu.academic.domain.File {
}

relation ImportCandidaciesFromDgesProcessDgesImportationStudentFile {
	student.access.importation.DgesStudentImportationProcess playsRole dgesStudentImportationProcess;
	student.access.importation.DgesStudentImportationFile playsRole dgesStudentImportationFile;
}

relation DgesStudentImportationProcessExecutionYear {
	.org.fenixedu.academic.domain.ExecutionYear playsRole executionYear;
	student.access.importation.DgesStudentImportationProcess playsRole dgesStudentImportationProcess {
		multiplicity *;
	}
}

relation DgesStudentImportationProcessSpace {
	.org.fenixedu.spaces.domain.Space playsRole space;
	student.access.importation.DgesStudentImportationProcess playsRole dgesStudentImportationProcess {
		multiplicity*;
	}
}

relation DgesStudentImportationProcessStudentCandidacy {
	student.access.importation.DgesStudentImportationProcess playsRole dgesStudentImportationProcess;
	.org.fenixedu.academic.domain.candidacy.StudentCandidacy playsRole studentCandidacy {
		multiplicity *;
	}
}

// ==================== First Year School Configuration ====================

class FirstYearRegistrationConfiguration{
	boolean requiresVaccination;
	boolean requiresCoursesEnrolment;
	boolean requiresClassesEnrolment;
}

relation DegreeFirstYearRegistrationConfiguration{
	.org.fenixedu.academic.domain.Degree playsRole degree{
		multiplicity 1;
	}
	FirstYearRegistrationConfiguration playsRole firstYearRegistrationConfiguration;
}

class FirstYearRegistrationGlobalConfiguration {
}

class CgdMod43Template extends .org.fenixedu.bennu.io.domain.GenericFile {
}

relation BennuFirstYearRegistrationGlobalConfiguration {
	.org.fenixedu.bennu.core.domain.Bennu playsRole bennu;
	FirstYearRegistrationGlobalConfiguration playsRole firstYearRegistrationGlobalConfigurations {
		multiplicity *;
	}
}

relation DegreeConfigurationGlobalConfiguration {
	FirstYearRegistrationGlobalConfiguration playsRole globalConfiguration {
		multiplicity 1;
	}
	FirstYearRegistrationConfiguration playsRole firstYearRegistrationConfigurations {
		multiplicity *;
	}
}

relation GlobalConfigurationTemplate {
	FirstYearRegistrationGlobalConfiguration playsRole globalConfiguration {
		multiplicity 1;
	}
	CgdMod43Template playsRole mod43Template;
}	

//Class to bypass PortalLayoutInjector limitations. Check the java file for more information
class ULisboaPortalConfiguration{
}

relation ULisboaPortalConfigurationPortalConfiguration{
	.org.fenixedu.bennu.portal.domain.PortalConfiguration playsRole portal{
		multiplicity 1;
	}
	ULisboaPortalConfiguration playsRole ulisboaPortal{
		multiplicity 1;
	}
}


// ==================== BEGIN: MaximumNumberOfCreditsForEnrolmentPeriodEnforcer ====================

class MaximumNumberOfCreditsForEnrolmentPeriodEnforcer {
	Double maxCredits;
	Double maxCreditsPartialTime;
}

relation ULisboaSpecificationsRootMaximumNumberOfCreditsForEnrolmentPeriodEnforcer {
	ULisboaSpecificationsRoot playsRole uLisboaSpecificationsRoot;
	MaximumNumberOfCreditsForEnrolmentPeriodEnforcer playsRole maximumNumberOfCreditsForEnrolmentPeriodEnforcer {
		multiplicity 0..1;
	}
}

// ==================== END: MaximumNumberOfCreditsForEnrolmentPeriodEnforcer ====================

// ==================== BEGIN: CurricularPeriodConfiguration ====================

class curricularPeriod.CurricularPeriodConfiguration {
}

relation CurricularPeriodConfigurationRoot {
	ULisboaSpecificationsRoot playsRole uLisboaSpecificationsRoot {
		multiplicity 1..1;
	}
	curricularPeriod.CurricularPeriodConfiguration playsRole curricularPeriodConfiguration {
		multiplicity *;
	}
}

relation CurricularPeriodConfigurations {
	.org.fenixedu.academic.domain.curricularPeriod.CurricularPeriod playsRole curricularPeriod {
		multiplicity 1..1;
	}
	curricularPeriod.CurricularPeriodConfiguration playsRole configuration {
		multiplicity 0..1;
	}
}

class curricularPeriod.rule.CurricularPeriodRule {
	BigDecimal credits;
}

	class curricularPeriod.rule.RuleEnrolment extends curricularPeriod.rule.CurricularPeriodRule {
		Integer semester;
	}
	
		class curricularPeriod.rule.enrolment.CreditsInEnrolmentPeriod extends curricularPeriod.rule.RuleEnrolment {
			boolean includeEnrolments;
		}
		
		class curricularPeriod.rule.enrolment.CreditsInCurricularPeriod extends curricularPeriod.rule.RuleEnrolment {
			Integer yearMin;
			Integer yearMax;
		}
		
		class curricularPeriod.rule.enrolment.CreditsNotEnroled extends curricularPeriod.rule.RuleEnrolment {
			Integer yearMin;
		}
		
		class curricularPeriod.rule.enrolment.CreditsEnroledAsFirstTime extends curricularPeriod.rule.RuleEnrolment {
		
		}

	class curricularPeriod.rule.RuleTransition extends curricularPeriod.rule.CurricularPeriodRule {
		Integer yearMin;
		Integer yearMax;
	}

		class curricularPeriod.rule.transition.FlunkedCredits extends curricularPeriod.rule.RuleTransition {
		}
		
		class curricularPeriod.rule.transition.ApprovedCredits extends curricularPeriod.rule.RuleTransition {
		}
		
		class curricularPeriod.rule.transition.FlunkedCurricularCourses extends curricularPeriod.rule.RuleTransition {
			String codesCSV;
		}
		
		class curricularPeriod.rule.transition.StudentStatuteExecutiveRule extends curricularPeriod.rule.RuleTransition {
		}
		
relation CurricularPeriodConfigurationRuleEnrolment {
	curricularPeriod.CurricularPeriodConfiguration playsRole configurationEnrolment {
		multiplicity 1..1;
	}
	curricularPeriod.rule.RuleEnrolment playsRole ruleEnrolment {
		multiplicity *;
	}
}

relation CurricularPeriodConfigurationRuleTransition {
	curricularPeriod.CurricularPeriodConfiguration playsRole configurationTransition {
		multiplicity 1..1;
	}
	curricularPeriod.rule.RuleTransition playsRole ruleTransition {
		multiplicity *;
	}
}

relation StatuteTypeRuleTransition {
	.org.fenixedu.academic.domain.student.StatuteType playsRole statuteType {
		multiplicity 1..1;
	}
	curricularPeriod.rule.transition.StudentStatuteExecutiveRule playsRole ruleTransition {
		multiplicity *;
	}
}

// ==================== END: CurricularPeriodConfiguration ====================


// ==================== Parishes as domain objects
class Parish{
	String code (REQUIRED);
    String name (REQUIRED);
}

relation ParsishDistrictSubdivision{
	.org.fenixedu.academic.domain.DistrictSubdivision playsRole districtSubdivision{
		multiplicity 1;
	}
	
	Parish playsRole parish{
		multiplicity *;
	}
}

relation ParsishesRoot {
	Parish playsRole parishes {
		multiplicity *;
	}
	.org.fenixedu.bennu.core.domain.Bennu playsRole root;
}


// ==================== END: Parishes as domain objects ====================


// ======================= = HelpdeskConfigurations = =========================

class helpdesk.HelpdeskConfigurations {
}

class helpdesk.HelpdeskRecipient {
	String email;
}

relation BennuHelpdeskConfigurations {
	helpdesk.HelpdeskConfigurations playsRole helpdeskConfiguration;
	.org.fenixedu.bennu.core.domain.Bennu playsRole bennu {
		multiplicity 1..1;
	}
}

relation HelpdeskRecipients {
	helpdesk.HelpdeskConfigurations playsRole recipientConfiguration;
	helpdesk.HelpdeskRecipient playsRole recipients {
		multiplicity *;
	}
}

relation HelpdeskCCs {
	helpdesk.HelpdeskConfigurations playsRole cCConfiguration;
	helpdesk.HelpdeskRecipient playsRole cCs {
		multiplicity *;
	}
}

relation HelpdeskBCCs {
	helpdesk.HelpdeskConfigurations playsRole bCCConfiguration;
	helpdesk.HelpdeskRecipient playsRole bCCs {
		multiplicity *;
	}
}

// ======================= = ====================== = =========================
